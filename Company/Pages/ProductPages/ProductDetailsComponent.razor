@page "/Products/Details/{id:int}"
<PageTitle>Product Details</PageTitle>

@if (Product != null || Categories != null)
{
    <h3 class="text text-muted text-center">Product Details</h3>

    <div class="card p-2 mx-auto mt-5 text-center" style="width: 20rem;">
        <img src="@Product.ImgSrc" class="card-img-top" alt="...">
        <div class="card-body">
            <h4 class="card-title">@Product.Name</h4>
            <p class="card-text ">Category: <strong>@Categories.FirstOrDefault(c=> c.Id==Product.CategoryId).Name</strong></p>
            <p class="card-text ">Price: <strong>$@Product.Price</strong></p>
            <p class="card-text ">Quantity: <strong>@Product.Quantity</strong></p>
        </div>
        <a href="/Products" class="btn btn-primary">Back To List</a>
    </div>
}
else
{
    <h3 class="text text-muted text-center">Just Waiting OR There is no product !!</h3>
}

@code {
    [Parameter]
    public int id { get; set; }

    [Inject]
    public IService<Product> Productservice { get; set; }
    [Inject]
    public IService<Category> Categoryservice { get; set; }

    public Product Product { get; set; }
    public List<Category> Categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Categories = await Categoryservice.GetAll();

        Product = await Productservice.GetById(id);
    }
}
