@page "/Products/Add"
<PageTitle>Add Product</PageTitle>

@if(Categories == null)
{
    <h3 class="text text-muted text-center">Just Waiting OR There are no categories !!</h3>
}
else
{
    <h3 class="text text-muted text-center">Add Product</h3>

    <EditForm Model="Product" OnValidSubmit="save">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div>
            <label>Name</label>
            <InputText class="form form-control" @bind-Value="Product.Name"></InputText>
            <ValidationMessage For="()=> Product.Name"></ValidationMessage>
        </div>
        <div>
            <label>Price</label>
            <InputNumber class="form form-control" @bind-Value="Product.Price"></InputNumber>
            <ValidationMessage For="()=> Product.Price"></ValidationMessage>
        </div>
        <div>
            <label>Quantity</label>
            <InputNumber class="form form-control" @bind-Value="Product.Quantity"></InputNumber>
            <ValidationMessage For="()=> Product.Quantity"></ValidationMessage>
        </div>
        <div>
            <label>Image</label>
            <InputText class="form form-control" @bind-Value="Product.ImgSrc"></InputText>
            <ValidationMessage For="()=> Product.ImgSrc"></ValidationMessage>
        </div>
        <div>
            <label>Category</label>
            <InputSelect class="form form-control" @bind-Value="Product.CategoryId">
                @foreach (var c in Categories)
                {
                    <option value="@c.Id">@c.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="()=> Product.CategoryId"></ValidationMessage>
        </div>
        <input type="submit" value="Save" name="Save" class="btn btn-success mx-1"/>
    </EditForm>
}

@code {
    [Inject]
    public IService<Product> Productservice { get; set; }
    [Inject]
    public IService<Category> Categoryservice { get; set; }
    [Inject]
    public NavigationManager navigationManager { get; set; }


    public Product Product { get; set; } = new Product();
    public List<Category> Categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Categories = await Categoryservice.GetAll();
    }

    async void save()
    {
        await Productservice.Add(Product);
        navigationManager.NavigateTo("/Products");
    }
}

<style>
    div {
        margin: 8px;
    }
</style>

